services:
  app:
    build: .
    ports:
      - "8080:8080"
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:h2:file:/data/taskdb
#      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.h2.Driver
#      SPRING_DATASOURCE_USERNAME: sa
#      SPRING_DATASOURCE_PASSWORD:
#      SPRING_H2_CONSOLE_ENABLED: "true"
#      SPRING_H2_CONSOLE_PATH: "/h2-console"
#      SPRING_JPA_HIBERNATE_DDL_AUTO: "update"
    volumes:
      - h2-data:/data

#  h2-console:
#    image: oscarfonts/h2
#    ports:
#      - "8081:8081"
#    volumes:
#      - h2-data:/opt/h2-data
#    depends_on:
#      - app
  postgres-db:
    image: postgres:16
    container_name: app-postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: '123456'
      POSTGRES_DB: app_db
    ports:
      - '5434:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
  redis:
    container_name: app-redis
    image: redis:7.0
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
volumes:
  h2-data:
  postgres-data:
  redis_data: